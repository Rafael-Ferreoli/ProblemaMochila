/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author rafae
 */
public class FrHome extends javax.swing.JFrame {

    private int qtdItens;
    private int capMochila;
    private String[] nomes;
    private int[] pesos;
    private int[] valores;

    /**
     * Creates new form FrHome
     */
    public FrHome() {
        initComponents();
        jBtQtdItens.setEnabled(false);
        jBtCadastrarItens.setEnabled(false);
        jBtGerarSolucao.setEnabled(false);

    }
    
    private int problemaMochila(int[] pesos, int[] valores, int capacidade, List<String> nomesSelecionados, String[] nomes) {
        int n = pesos.length;
        // Cria uma lista de itens
        List<Item> itens = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            itens.add(new Item(nomes[i], pesos[i], valores[i]));
        }
        // Ordena os itens por valor/peso em ordem decrescente
        itens.sort((Item a, Item b) -> Double.compare(b.valor / (double) b.peso, a.valor / (double) a.peso));
        int valorTotal = 0;
        for (Item item : itens) {
            if (capacidade >= item.peso) {
                nomesSelecionados.add("ITEM: " + item.nome + ", PESO: " + item.peso + ", VALOR: " + item.valor);
                capacidade -= item.peso;
                valorTotal += item.valor;
            }
        }
        return valorTotal;
        /*
        int n = pesos.length;
        int[][] dp = new int[n + 1][capacidade + 1];

        // Preenche a matriz usando a abordagem bottom-up (programação dinâmica)
        for (int i = 1; i <= n; i++) {
            for (int w = 0; w <= capacidade; w++) {
                if (pesos[i - 1] <= w) {
                    dp[i][w] = Math.max(valores[i - 1] + dp[i - 1][w - pesos[i - 1]], dp[i - 1][w]);
                } else {
                    dp[i][w] = dp[i - 1][w];
                }
            }
        }

        // Reconstrói a solução
        int i = n, w = capacidade;
        while (i > 0 && w > 0) {
            if (dp[i][w] != dp[i - 1][w]) {
                nomesSelecionados.add("Item: " + nomes[i - 1] + ", Peso: " + pesos[i - 1] + ", Valor: " + valores[i - 1]);
                w -= pesos[i - 1];
            }
            i -= 1;
        }

        return dp[n][capacidade];
        */
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jBtCapMochila = new javax.swing.JButton();
        jLbCapMochila = new javax.swing.JLabel();
        jBtQtdItens = new javax.swing.JButton();
        jLbQtdItens = new javax.swing.JLabel();
        jBtCadastrarItens = new javax.swing.JButton();
        jBtGerarSolucao = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTaResultados = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PROBLEMA DA MOCHILA");

        jBtCapMochila.setText("CAPACIDADE MOCHILA");
        jBtCapMochila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCapMochilaActionPerformed(evt);
            }
        });

        jLbCapMochila.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLbCapMochila.setText("0");
        jLbCapMochila.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jBtQtdItens.setText("QUANTIDADE ITENS");
        jBtQtdItens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtQtdItensActionPerformed(evt);
            }
        });

        jLbQtdItens.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLbQtdItens.setText("0");
        jLbQtdItens.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jBtCadastrarItens.setText("CADASTRAR ITENS");
        jBtCadastrarItens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCadastrarItensActionPerformed(evt);
            }
        });

        jBtGerarSolucao.setText("GERAR SOLUÇÃO");
        jBtGerarSolucao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtGerarSolucaoActionPerformed(evt);
            }
        });

        jTaResultados.setColumns(20);
        jTaResultados.setRows(5);
        jScrollPane1.setViewportView(jTaResultados);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator2)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jBtCadastrarItens, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jBtCapMochila)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLbCapMochila, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtQtdItens, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLbQtdItens, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jBtGerarSolucao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, 0)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBtCapMochila)
                        .addComponent(jLbCapMochila))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBtQtdItens)
                        .addComponent(jLbQtdItens)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtCadastrarItens)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtGerarSolucao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtCapMochilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCapMochilaActionPerformed
        String A = JOptionPane.showInputDialog("DIGITE A CAPACIDADE DA MOCHILA:");
        capMochila = Integer.parseInt(A);
        jLbCapMochila.setText(A.toString());
        jBtQtdItens.setEnabled(true);
        jBtCapMochila.setEnabled(false);
    }//GEN-LAST:event_jBtCapMochilaActionPerformed

    private void jBtQtdItensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtQtdItensActionPerformed
        String A = JOptionPane.showInputDialog("DIGITE A QUANTIDADE DE ITENS DO PROBLEMA:");
        qtdItens = Integer.parseInt(A);
        jLbQtdItens.setText(A.toString());
        jBtCadastrarItens.setEnabled(true);
        jBtQtdItens.setEnabled(false);
    }//GEN-LAST:event_jBtQtdItensActionPerformed

    private void jBtCadastrarItensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCadastrarItensActionPerformed

        nomes = new String[qtdItens];
        pesos = new int[qtdItens];
        valores = new int[qtdItens];
        // Obtém informações para cada item
        for (int i = 0; i < qtdItens; i++) {
            String nomeItem = JOptionPane.showInputDialog("DIGITE O NOME DO ITEM " + (i + 1) + ":");
            nomes[i] = nomeItem;
            String pesoItem = JOptionPane.showInputDialog("DIGITE O PESO DO ITEM " + (i + 1) + ":");
            pesos[i] = Integer.parseInt(pesoItem);
            String valorItem = JOptionPane.showInputDialog("DIGITE O VALOR DO ITEM " + (i + 1) + ":");
            valores[i] = Integer.parseInt(valorItem);
        }
        jBtGerarSolucao.setEnabled(true);
        jBtCadastrarItens.setEnabled(false);
        
        

    }//GEN-LAST:event_jBtCadastrarItensActionPerformed

    private void jBtGerarSolucaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtGerarSolucaoActionPerformed
        List<String> nomesSelecionados = new ArrayList<>();
        int valorMaximo = problemaMochila(pesos, valores, capMochila, nomesSelecionados, nomes);
        jTaResultados.append("RESULTADOS:\n\n");
        jTaResultados.append("VALOR MÁXIMO QUE PODE SER COLOCADO NA MOCHILA: " + valorMaximo + "\n\n");
        jTaResultados.append("LISTA DE ITENS SELECIONADOS PARA A MOCHILA:\n\n");
        for (String item : nomesSelecionados) {
            jTaResultados.append(item + "\n\n");
        }
        jBtGerarSolucao.setEnabled(false);
    }//GEN-LAST:event_jBtGerarSolucaoActionPerformed
        
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtCadastrarItens;
    private javax.swing.JButton jBtCapMochila;
    private javax.swing.JButton jBtGerarSolucao;
    private javax.swing.JButton jBtQtdItens;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLbCapMochila;
    private javax.swing.JLabel jLbQtdItens;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextArea jTaResultados;
    // End of variables declaration//GEN-END:variables
}
